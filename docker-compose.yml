version: '3.8'

services:
  reverse-proxy:
    # The official v2.11 Traefik docker image
    image: traefik:v2.11
    container_name: traefik
    # Enables the web UI and tells Traefik to listen to docker
    command:
      #- "--log.level=DEBUG"
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      - "--entrypoints.web.http.redirections.entrypoint.to=websecure"
      - "--entrypoints.web.http.redirections.entrypoint.scheme=https"
      - "--certificatesresolvers.myresolver.acme.dnschallenge=true"
      - "--certificatesresolvers.myresolver.acme.dnschallenge.provider=ionos"
      # - "--certificatesresolvers.myresolver.acme.caserver=https://acme-staging-v02.api.letsencrypt.org/directory"
      - "--certificatesresolvers.myresolver.acme.email=${IONOS_EMAIL}"
      - "--certificatesresolvers.myresolver.acme.storage=/letsencrypt/acme.json"
    environment:
      - IONOS_API_KEY=${IONOS_API_KEY}
    ports:
      # The HTTP port
      - "443:443"
      # The Web UI (enabled by --api.insecure=true)
      - "8080:8080"
    volumes:
      # So that Traefik can listen to the Docker events
      - /var/run/docker.sock:/var/run/docker.sock
      - "./letsencrypt:/letsencrypt"

  # Allow homepage to securily access docker socket without root users.
  dockerproxy:
    image: ghcr.io/tecnativa/docker-socket-proxy:latest
    container_name: dockerproxy
    deploy:
      resources:
        limits:
          cpus: "0.1"
          memory: 64M
        reservations:
          memory: 16M
    environment:
      - CONTAINERS=1 # Allow access to viewing containers
      - POST=0 # Disallow any POST operations (effectively read-only)
    ports:
      - 127.0.0.1:2375:2375
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro # Mounted as read-only
    restart: unless-stopped

  # homepage:
  #   image: ghcr.io/gethomepage/homepage:latest
  #   container_name: homepage
  #   deploy:
  #     resources:
  #       limits:
  #         cpus: "0.2"
  #         memory: 256M
  #       reservations:
  #         memory: 64M
  #   environment:
  #     - PUID=1000
  #     - PGID=1000
  #     - TZ=Europe/France
  #   volumes:
  #     - ./homepage/config:/app/config # Make sure your local config directory exists
  #     - /var/run/docker.sock:/var/run/docker.sock:ro # optional, for docker integrations
  #   restart: unless-stopped
  #   labels:
  #     - traefik.enable=true
  #     - traefik.http.routers.homepage.rule=Host(`seigneurguerande.fr`)
  #     - traefik.http.services.homepage.loadbalancer.server.port=3000
  #     - traefik.http.routers.homepage.entrypoints=websecure
  #     - traefik.http.routers.homepage.tls.certresolver=myresolver
  #     # Only whitelist local adresses
  #     - "traefik.http.routers.homepage.middlewares=local-ipwhitelist"

  jellyfin:
      image: linuxserver/jellyfin:10.9.11
      container_name: jellyfin
      deploy:
        resources:
          limits:
            cpus: "1.0"
            memory: 2G
          reservations:
            memory: 512M
      environment:
        - PUID=1000
        - PGID=1000
        - TZ=Europe/France
      volumes:
        - ./jellyfin:/config
        - /data/media/tvshows:/data/tvshows
        - /data/media/movies:/data/movies
        - /data/media/anime:/data/anime
      devices:
        - "/dev/dri:/dev/dri"
      restart: unless-stopped
      labels:
      - "traefik.http.middlewares.local-ipwhitelist.ipwhitelist.sourcerange=${IP_WHITELIST}"
      - traefik.enable=true
      - traefik.http.routers.jellyfin.rule=Host(`jellyfin.seigneurguerande.fr`)
      - traefik.http.services.jellyfin.loadbalancer.server.port=8096
      - traefik.http.routers.jellyfin.entrypoints=websecure
      - traefik.http.routers.jellyfin.tls.certresolver=myresolver
      # Only Whitelist relevent adresses
      - "traefik.http.routers.jellyfin.middlewares=local-ipwhitelist"
      - homepage.group=Media
      - homepage.name=jellyfin
      - homepage.icon=jellyfin.png
      - homepage.href=https://jellyfin.seigneurguerande.fr
      - homepage.description=Jellyfin Media server

  # ombi:
  #   image: lscr.io/linuxserver/ombi:4.43.5
  #   container_name: ombi
  #   deploy:
  #     resources:
  #       limits:
  #         cpus: "0.4"
  #         memory: 512M
  #       reservations:
  #         memory: 128M
  #   environment:
  #     - PUID=1000
  #     - PGID=1000
  #     - TZ=Etc/UTC
  #   volumes:
  #     - ./ombi:/config
  #   restart: unless-stopped
  #   labels:
  #     - traefik.enable=true
  #     - traefik.http.routers.ombi.rule=Host(`ombi.seigneurguerande.fr`)
  #     - traefik.http.services.ombi.loadbalancer.server.port=3579
  #     - traefik.http.routers.ombi.entrypoints=websecure
  #     - traefik.http.routers.ombi.tls.certresolver=myresolver
  #     # Only whitelist local adresses
  #     - "traefik.http.middlewares.local-ipwhitelist.ipwhitelist.sourcerange=${IP_WHITELIST}"
  #     - "traefik.http.routers.ombi.middlewares=local-ipwhitelist"
  #     - homepage.group=Media
  #     - homepage.name=ombi
  #     - homepage.icon=ombi.png
  #     - homepage.href=https://ombi.seigneurguerande.fr
  #     - homepage.description=Media server
  #     - homepage.widget.type=ombi
  #     - homepage.widget.url=https://ombi.seigneurguerande.fr
  #     - homepage.widget.key=${OMBI_KEY}
  #     - homepage.widget.fields=["pending","approved","available"]

  sonarr:
    image: ghcr.io/linuxserver/sonarr:4.0.9
    container_name: sonarr
    deploy:
      resources:
        limits:
          cpus: "0.4"
          memory: 256M
        reservations:
          memory: 64M
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Europe/France
    volumes:
      - ./sonarr:/config
      - /data/media/anime:/anime
      - /data/media/tvshows:/tvshows
      - /data/transmission/downloads/complete:/downloads/complete
    restart: unless-stopped
    labels:
      - traefik.enable=true
      - traefik.http.routers.sonarr.rule=Host(`sonarr.seigneurguerande.fr`)
      - traefik.http.services.sonarr.loadbalancer.server.port=8989
      - traefik.http.routers.sonarr.entrypoints=websecure
      - traefik.http.routers.sonarr.tls.certresolver=myresolver
      - "traefik.http.routers.sonarr.middlewares=local-ipwhitelist"
      - homepage.group=Media
      - homepage.name=Sonarr
      - homepage.icon=sonarr.png
      - homepage.href=https://sonarr.seigneurguerande.fr
      - homepage.description=Sonarr Server
      - homepage.widget.type=sonarr
      - homepage.widget.url=https://sonarr.seigneurguerande.fr
      - homepage.widget.key=${SONARR_KEY}
      - homepage.widget.fields=["wanted","queued","series"]
      - homepage.widget.enableQueue=true
  
  radarr:
      image: linuxserver/radarr:5.11.0
      container_name: radarr
      deploy:
        resources:
          limits:
            cpus: "0.2"
            memory: 256M
          reservations:
            memory: 64M
      environment:
        - PUID=1000
        - PGID=1000
        - TZ=Europe/France
      volumes:
        - ./radarr:/config
        - /data/media/movies:/movies
        - /data/transmission/downloads/complete:/downloads/complete
      restart: unless-stopped
      labels:
        - traefik.enable=true
        - traefik.http.routers.radarr.rule=Host(`radarr.seigneurguerande.fr`)
        - traefik.http.services.radarr.loadbalancer.server.port=7878
        - traefik.http.routers.radarr.entrypoints=websecure
        - traefik.http.routers.radarr.tls.certresolver=myresolver
        - "traefik.http.routers.radarr.middlewares=local-ipwhitelist"
        - homepage.group=Media
        - homepage.name=radarr
        - homepage.icon=radarr.png
        - homepage.href=https://radarr.seigneurguerande.fr
        - homepage.description=Radarr server
        - homepage.widget.type=radarr
        - homepage.widget.url=https://radarr.seigneurguerande.fr
        - homepage.widget.key=${RADARR_KEY}
        - homepage.widget.fields=["wanted","missing","queued","series"]
        - homepage.widget.enableQueue=true
    
  bazarr:
    image: linuxserver/bazarr:1.4.4
    container_name: bazarr
    deploy:
      resources:
        limits:
          cpus: "0.2"
          memory: 512M
        reservations:
          memory: 64M
    environment:
      - PUID=1000
      - PGID=1000
    volumes:
      - ./bazarr:/config
      - /data/media/movies:/movies #optional
      - /data/media/tvshows:/tvshows #optional
      - /data/media/anime:/anime
    restart: unless-stopped
    labels:
      - traefik.enable=true
      - traefik.http.routers.bazarr.rule=Host(`bazarr.seigneurguerande.fr`)
      - traefik.http.services.bazarr.loadbalancer.server.port=6767
      - traefik.http.routers.bazarr.entrypoints=websecure
      - traefik.http.routers.bazarr.tls.certresolver=myresolver
      - "traefik.http.routers.bazarr.middlewares=local-ipwhitelist"
      - homepage.group=Media
      - homepage.name=bazarr
      - homepage.icon=bazarr.png
      - homepage.href=https://bazarr.seigneurguerande.fr
      - homepage.description=Bazarr server
      - homepage.widget.type=bazarr
      - homepage.widget.url=https://bazarr.seigneurguerande.fr
      - homepage.widget.key=${BAZARR_KEY}
      - homepage.widget.fields=["missingEpisodes","missingMovies"]

  prowlarr:
    image: lscr.io/linuxserver/prowlarr:1.24.3
    container_name: prowlarr
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Europe/France
    volumes:
      - ./prowlarr:/config
    deploy:
      resources:
        limits:
          cpus: "0.2"
          memory: 256M
        reservations:
          memory: 64M
    restart: unless-stopped
    labels:
      - traefik.enable=true
      - traefik.http.routers.prowlarr.rule=Host(`prowlarr.seigneurguerande.fr`)
      - traefik.http.services.prowlarr.loadbalancer.server.port=9696
      - traefik.http.routers.prowlarr.entrypoints=websecure
      - traefik.http.routers.prowlarr.tls.certresolver=myresolver
      - "traefik.http.routers.prowlarr.middlewares=local-ipwhitelist"
      - homepage.group=Media
      - homepage.name=prowlarr
      - homepage.icon=bazarr.png
      - homepage.href=https://prowlarr.seigneurguerande.fr
      - homepage.description=Prowlarr server
      - homepage.widget.type=prowlarr
      - homepage.widget.url=https://prowlarr.seigneurguerande.fr
      - homepage.widget.key=${PROWLARR_KEY}
      - homepage.widget.fields=["numberOfGrabs","numberOfQueries","numberOfFailGrabs","numberOfFailQueries"]

  gluetun:
    image: qmcgaw/gluetun:v3.35
    container_name: gluetun
    ports:
      - 6035:6035
      - 6035:6035/udp
    cap_add:
      - NET_ADMIN
    environment:
      - VPN_SERVICE_PROVIDER=airvpn
      - VPN_TYPE=wireguard
      - WIREGUARD_PRIVATE_KEY=${WIREGUARD_PRIVATE_KEY}
      - WIREGUARD_PRESHARED_KEY=${WIREGUARD_PRESHARED_KEY}
      - WIREGUARD_ADDRESSES=${WIREGUARD_ADRESSES}
      - FIREWALL_VPN_INPUT_PORTS=6035
      - SERVER_COUNTRIES=Netherlands
    restart: unless-stopped

  transmission:
    image: lscr.io/linuxserver/transmission:4.0.5
    network_mode: "service:gluetun"
    container_name: transmission
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Europe/France
      - USER=${TRANSMISSION_USER}
      - PASS=${TRANSMISSION_PASSWORD}
      - PEERPORT=6035
    volumes:
      - ./transmission/config:/config
      - /data/transmission/downloads:/downloads
      - ./transmission/watch:/watch
    restart: unless-stopped
    labels:
      - traefik.enable=true
      - traefik.http.routers.transmission.rule=Host(`transmission.seigneurguerande.fr`)
      - traefik.http.services.transmission.loadbalancer.server.port=9091
      - traefik.http.routers.transmission.entrypoints=websecure
      - traefik.http.routers.transmission.tls.certresolver=myresolver
      - "traefik.http.routers.transmission.middlewares=local-ipwhitelist"
      - homepage.group=Tools
      - homepage.name=qbittorrent
      - homepage.icon=qbittorrent.png
      - homepage.href=https://transmission.seigneurguerande.fr
      - homepage.description=Transmission server

